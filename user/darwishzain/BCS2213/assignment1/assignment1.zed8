─ section assignment1 parents standard_toolkit
└
Each student of the Computer Faculty has a curriculum structure according to their
respective departments. In general, the purpose of the curriculum structure is to visualize the
registration of subjects in each semester. Based on the visualization, students need to register
their respective subjects using the Open registration system.

In the curriculum structure,

subject groups(specified based on codes)
faculty core subjects
departmental required subjects
university required subjects 
elective subjects 

students have the right to determine the number of credits 
what subjects are required during registration for each semester

Based on the curriculum structure and open registration system, you are required to develop a
Z specification model using the Z notation tool. The specification should support these
requirements:
1. The system able to login and logout by the student and academic advisor.
2. The system allows student to register (insert) and withdraw or drop (delete) the subject.
3. The system allows student to update their registration such as change the section or etc.
4. The system should provide and alert notification to the academic advisor for
approve/disapprove
5. This system does not allow students to register for subjects exceeding 20 credits per semester.
6. This system allows academic advising to approve or disapprove subjects registered/withdrawn
by students.
7. The system able to display/print all information of registered subject by student and academic
advisor.
## Course == Code
─ [STUDENT,ADVISOR,COURSE,SECTION,BOOL] └
╷
  True,False : BOOL
└
┌ SystemSchema
	Student: ℙ STUDENT
	Studentcourse: STUDENT ⇸ ℙ COURSE
	Studentsection: STUDENT ⇸  ℙ COURSE ⇸ ℙ SECTION
	Courseapproved: STUDENT ⇸ ℙ COURSE ⇸ BOOL
	Studentadvisor: STUDENT ⇸ ADVISOR
	Studentcredit: STUDENT ⇸ ℕ
  	Advisor:  ℙ ADVISOR
  	Course: ℙ COURSE
  	Section: COURSE ⇸ ℙ SECTION
  	Credit: COURSE ⇸ ℕ
  	Maxcredit: ℕ
 	 Studentlogged : ℙ STUDENT
  	Advisorlogged : ℙ ADVISOR
|
	Maxcredit = 20
└

┌ InitSystem
 	ΔSystemSchema 	
|
  	Student = ∅
  	Studentcourse = ∅
  	Studentsection = ∅
	Courseapproved = ∅
	Studentadvisor = ∅
	Studentcredit = ∅
	Studentcourse = ∅
  	Advisor = ∅
  	Course = ∅
  	Section = ∅
  	Credit = ∅
  	Studentlogged = ∅
  	Advisorlogged = ∅
└

┌ Studentlogin
  ΔSystemSchema
  student?: STUDENT
  Studentlogged′: ℙ STUDENT
|
	student? ∈ Student
		Studentlogged = ∅
			Studentlogged′ = Studentlogged ∪ {student?}
└
┌ Advisorlogin
  ΔSystemSchema
  advisor?: ADVISOR
  Advisorlogged′: ℙ ADVISOR
|
	advisor? ∈ Advisor
		Advisorlogged = ∅
			Advisorlogged′ = Advisorlogged ∪ {advisor?}
└
┌ Studentlogout
  ΔSystemSchema
  student?: STUDENT
|
	student? ∈ Student
		Studentlogged ≠ ∅
			Studentlogged = ∅
└
┌ Advisorlogout
  ΔSystemSchema
  advisor?: ADVISOR
|
	advisor? ∈ Advisor
		Advisorlogged ≠ ∅
			Advisorlogged = ∅
└

┌ CourseRegister
  ΔSystemSchema
  ΞStudentlogin
  studentlogged?: STUDENT
  course? : COURSE
  section?: ℙ SECTION
|
	studentlogged? ∈ Studentlogged
		course? ∈ Course
			section? ∈ ℙ Section
				Credit(course?) + Studentcredit( studentlogged?) ≤ Maxcredit	
					Studentcourse′ = Studentcourse ⊕ {studentlogged? ↦ { course? }}
					Studentsection′ = Studentsection ⊕  { studentlogged? ↦ { course? ↦ section? } }
					Studentcredit′(studentlogged?) = Studentcredit(studentlogged?) + Credit(course?)
└
courseregister add new course
┌ Coursewithdraw
   ΔSystemSchema
  ΞStudentlogin
  studentlogged?: STUDENT
  course? : COURSE
  section?: ℙ SECTION
|
  studentlogged? ∈ Studentlogged
		course? ∈ Course
			section? ∈ ℙ Section
				Studentcourse′ = Studentcourse ⊖ {studentlogged? ↦ { course? }}
				Studentsection′ = Studentsection ⊖ { studentlogged? ↦ { course ↦ section? } }
				Studentcredit′(studentlogged?) = Studentcredit(studentlogged?) − Credit(course?)
 └
 
┌ Courseedit
  ΔSystemSchema
  ΞStudentlogin
  studentlogged?: STUDENT
  course? : COURSE
  section?: ℙ SECTION
|
  studentlogged? ∈ Studentlogged
  	course? ∈ Course
  		section? ∈ ℙ Section
  			Studentsection′ = Studentsection ⊖ { studentlogged? ↦ { course? ↦ section? } }
  			Studentsection′ = Studentsection ⊕  { studentlogged? ↦ { course? ↦ section? } }
  			
└

┌ Advisornotify
   ΔSystemSchema
  ΞAdvisorlogin
  advisorlogged?: ADVISOR
  studentcheck? : STUDENT
  studentinfo!: STUDENT
|
  	advisorlogged? ∈ Advisorlogged
  		advisorlogged? = Studentadvisor(studentcheck?)
  			Courseapproved(studentcheck?)(Course) = False
 		 
└

┌Advisorapprove
   ΔSystemSchema
  advisorlogged?: ADVISOR
  studentcheck? : STUDENT
  coursecheck?: COURSE
|
	advisorlogged? ∈ Advisorlogged
		advisorlogged? = Studentadvisor(studentcheck?)
  			coursecheck? ∈ Course
  				Courseapproved′ = Courseapproved ⊕ {studentcheck? ↦ {{coursecheck?} ↦ True}} 
└
┌ Studentdisplay
   	ΞSystemSchema
  	ΞStudentlogin
  	studentlogged?: STUDENT
  	studentcourse! : STUDENT ⇸ ℙ COURSE
	studentsection! : STUDENT ⇸  ℙ COURSE ⇸ ℙ SECTION
	courseapproved! : STUDENT ⇸ ℙ COURSE ⇸ BOOL
	studentadvisor! : STUDENT ⇸  ADVISOR
	studentcredit! : STUDENT ⇸ ℕ
|
 	studentlogged? ∈ Studentlogged
		studentcourse!(studentlogged?) = Studentcourse(studentlogged?)
		studentsection!(studentlogged?) = Studentsection(studentlogged?)
		courseapproved!(studentlogged?) = Courseapproved(studentlogged?)
		studentadvisor!(studentlogged?) = Studentadvisor(studentlogged?)
		studentcredit!(studentlogged?) = Studentcredit(studentlogged?)
└

┌ Advisordisplay
   	ΞSystemSchema
  	ΞAdvisorlogin
  	advisorlogged?:ADVISOR
  	studentcheck? : STUDENT
  	studentcourse! : STUDENT ⇸ ℙ COURSE
	studentsection! : STUDENT ⇸  ℙ COURSE ⇸ ℙ SECTION
	courseapproved! : STUDENT ⇸ ℙ COURSE ⇸ BOOL
	studentcredit! : STUDENT ⇸ ℕ
  	
|
  	advisorlogged? ∈ Advisorlogged
  		advisorlogged? = Studentadvisor(studentcheck?)
  			studentcourse!(studentcheck?) = Studentcourse(studentcheck?)
			studentsection!(studentcheck?) = Studentsection(studentcheck?)
			courseapproved!(studentcheck?) = Courseapproved(studentcheck?)
			studentcredit!(studentcheck?) = Studentcredit(studentcheck?)
  		
  	
└
